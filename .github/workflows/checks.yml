---
  name: CI/CD Pipeline

  on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main

  env:
    DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USER }}/sgeapp:latest

  jobs:

    docker:
      name: setup-build
      runs-on: ubuntu-latest
      steps:
        -
          name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        -
          name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: user/app:latest

    test:
      name: Run Tests
      runs-on: ubuntu-latest
      needs: setup-build
      services:
        postgres:
          image: postgres:13-alpine
          env:
            POSTGRES_USER: ${{ secrets.DB_USER }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
            POSTGRES_DB: ${{ secrets.DB_NAME }}
          ports:
            - 5432:5432
      steps:
        # Checkout o código do repositório
        - name: Checkout code
          uses: actions/checkout@v3

        # Rodar testes dentro do Docker
        - name: Run tests
          run: |
            docker compose run --rm sgeapp sh -c "
              python manage.py wait_for_db &&
              python manage.py test
            "

    lint:
      name: Lint Code
      runs-on: ubuntu-latest
      needs: setup-build
      steps:
        # Checkout o código do repositório
        - name: Checkout code
          uses: actions/checkout@v2

        # Análise de código com flake8
        - name: Run flake8
          run: |
            docker compose run --rm sgeapp flake8

    # deploy:
    #   name: Deploy to Docker Hub
    #   runs-on: ubuntu-latest
    #   needs: [setup-build, test, lint]
    #   steps:
    #     # Checkout o código do repositório
    #     - name: Checkout code
    #       uses: actions/checkout@v2

    #     # Login no Docker Hub
    #     - name: Login to Docker Hub
    #       uses: docker/login-action@v2
    #       with:
    #         username: ${{ secrets.DOCKERHUB_USER }}
    #         password: ${{ secrets.DOCKERHUB_TOKEN }}

    #     # Push da imagem para o Docker Hub
    #     - name: Push Docker image
    #       run: |
    #         docker push $DOCKER_IMAGE
